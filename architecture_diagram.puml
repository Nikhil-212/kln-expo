@startuml Architecture Diagram

title Legal Document Generator - Architecture Overview

package "Flask Application" as FlaskApp {
    [app.py] as MainApp
    note right of MainApp
        Main entry point
        - Creates Flask app instance
        - Loads spaCy NLP model
        - Initializes LegalDocumentProcessor
        - Registers blueprints
    end note
}

package "Routes (Blueprints)" as Routes {
    [auth_bp] as AuthBP
    note right of AuthBP
        Authentication routes
        - /auth/login
        - /auth/signup
        - /auth/logout
    end note

    [main_bp] as MainBP
    note right of MainBP
        Main application routes
        - /
        - /generate
        - /history
    end note

    [document_bp] as DocumentBP
    note right of DocumentBP
        Document management routes
        - /document/form
        - /document/generate
        - /document/view
    end note
}

package "Services" as Services {
    [LegalDocumentProcessor] as Processor
    note right of Processor
        Core business logic
        - Document type classification
        - Entity extraction (spaCy + regex)
        - Document generation (.txt, .docx, .pdf)
        - Template processing
    end note
}

package "Models" as Models {
    [User Model] as UserModel
    note right of UserModel
        User management
        - get_user()
        - get_user_by_username()
        - add_user()
    end note
}

package "Templates" as Templates {
    [HTML Templates] as HTMLTemplates
    note right of HTMLTemplates
        Jinja2 templates
        - login.html
        - signup.html
        - generate.html
        - history.html
        - document_form.html
    end note

    [Document Templates] as DocTemplates
    note right of DocTemplates
        Legal document templates
        - rental_agreement_template.txt
        - land_sale_deed_template.txt
        - power_of_attorney_template.txt
        - house_lease_template.txt
    end note
}

package "Static Assets" as Static {
    [CSS] as CSSFiles
    [JavaScript] as JSFiles
    note right of JSFiles
        Client-side scripts
        - auth.js
        - voice_input.js
    end note
}

database "Supabase Database" as Supabase {
    [Users Table] as UsersTable
    [History Table] as HistoryTable
    note right of Supabase
        External database
        - User authentication data
        - Document generation history
    end note
}

actor "User" as User

' Relationships
User --> MainApp : HTTP Requests
MainApp --> AuthBP : Authentication
MainApp --> MainBP : Main pages
MainApp --> DocumentBP : Document operations
MainApp --> Processor : Document processing
Processor --> DocTemplates : Template files
MainApp --> UserModel : User data
UserModel --> Supabase : Database queries
AuthBP --> UserModel : User auth
DocumentBP --> Processor : Generate documents
MainBP --> Templates : Render pages
DocumentBP --> Templates : Render forms
Templates --> Static : CSS/JS assets

' External dependencies
Processor --> [spaCy NLP] : Entity extraction
Processor --> [Jinja2] : Template rendering
Processor --> [python-docx] : DOCX generation
Processor --> [ReportLab] : PDF generation

@enduml
